{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport GitHubSearch from \"./GitHubSearch\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar httpLink = createHttpLink({\n  uri: 'https://api.github.com/graphql',\n  headers: {\n    Authorization: 'Bearer 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'\n  }\n});\nvar client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache()\n});\nexport default function Home() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    lang = _useState2[0],\n    setLang = _useState2[1];\n  return _jsxs(ApolloProvider, {\n    client: client,\n    children: [_jsx(View, {\n      style: styles.titleContainer,\n      children: _jsxs(View, {\n        style: styles.title,\n        children: [_jsx(Text, {\n          style: styles.titlePart,\n          children: \"Trending   \"\n        }), _jsx(TextInput, {\n          style: styles.inputLang,\n          value: lang,\n          onChangeText: setLang,\n          placeholder: \"####\"\n        }), _jsx(Text, {\n          style: styles.titlePart,\n          children: \"   Repositories\"\n        })]\n      })\n    }), _jsx(GitHubSearch, {\n      lang: lang\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  titleContainer: {},\n  title: {\n    fontSize: 25,\n    marginTop: \"12%\",\n    margin: 16,\n    fontWeight: 'bold',\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  inputLang: {\n    borderBottomColor: '#fdcb6e',\n    fontSize: 20,\n    borderBottomWidth: 2,\n    color: '#fdcb6e',\n    fontWeight: 'bold',\n    maxWidth: \"27%\"\n  },\n  titlePart: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    color: '#a29bfe'\n  }\n});","map":{"version":3,"names":["React","useState","ApolloProvider","ApolloClient","InMemoryCache","createHttpLink","StyleSheet","View","Text","TextInput","GitHubSearch","jsx","_jsx","jsxs","_jsxs","httpLink","uri","headers","Authorization","client","link","cache","Home","_useState","_useState2","_slicedToArray","lang","setLang","children","style","styles","titleContainer","title","titlePart","inputLang","value","onChangeText","placeholder","create","fontSize","marginTop","margin","fontWeight","display","flexDirection","borderBottomColor","borderBottomWidth","color","maxWidth"],"sources":["/Users/alex/Desktop/Cours/InteractionProgramming/Lab3-TDDC73/Components/Home.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { StyleSheet, View, Text, TextInput } from 'react-native';\nimport GitHubSearch from './GitHubSearch';\n\nconst httpLink = createHttpLink({\n    uri: 'https://api.github.com/graphql',\n    headers: {\n      Authorization: 'Bearer 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', // Remplace avec ton propre token GitHub\n    },\n});\n\nconst client = new ApolloClient({\n    link: httpLink,\n    cache: new InMemoryCache(),\n});\n\nexport default function Home() {\n    const [lang, setLang] = useState(\"\");\n\n    return (\n        <ApolloProvider client={client}>\n            <View style={styles.titleContainer}>\n              <View style={styles.title}>\n                  <Text style={styles.titlePart}>Trending   </Text>\n                  <TextInput \n                    style={styles.inputLang}\n                    value={lang}\n                    onChangeText={setLang}\n                    placeholder='####'\n                  />\n                  <Text style={styles.titlePart}>   Repositories</Text>\n              </View>\n            </View>\n            <GitHubSearch lang={lang}/>\n        </ApolloProvider>\n    );\n}\n\nconst styles = StyleSheet.create({\n    titleContainer: {\n    },\n    title: {\n      fontSize: 25,\n      marginTop: \"12%\",\n      margin: 16,\n      fontWeight: 'bold',\n      display: 'flex',\n      flexDirection: 'row',\n    },\n    inputLang: {\n      borderBottomColor: '#fdcb6e',\n      fontSize: 20,\n      borderBottomWidth: 2,\n      color: '#fdcb6e',\n      fontWeight: 'bold',\n      maxWidth: \"27%\"\n    },\n    titlePart: {\n      fontSize: 25,\n      fontWeight: 'bold',\n      color: '#a29bfe',\n    },\n});"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,EAAEC,YAAY,EAAEC,aAAa,EAAEC,cAAc,QAAQ,gBAAgB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAE7F,OAAOC,YAAY;AAAuB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1C,IAAMC,QAAQ,GAAGV,cAAc,CAAC;EAC5BW,GAAG,EAAE,gCAAgC;EACrCC,OAAO,EAAE;IACPC,aAAa,EAAE;EACjB;AACJ,CAAC,CAAC;AAEF,IAAMC,MAAM,GAAG,IAAIhB,YAAY,CAAC;EAC5BiB,IAAI,EAAEL,QAAQ;EACdM,KAAK,EAAE,IAAIjB,aAAa,CAAC;AAC7B,CAAC,CAAC;AAEF,eAAe,SAASkB,IAAIA,CAAA,EAAG;EAC3B,IAAAC,SAAA,GAAwBtB,QAAQ,CAAC,EAAE,CAAC;IAAAuB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpB,OACIV,KAAA,CAACZ,cAAc;IAACiB,MAAM,EAAEA,MAAO;IAAAS,QAAA,GAC3BhB,IAAA,CAACL,IAAI;MAACsB,KAAK,EAAEC,MAAM,CAACC,cAAe;MAAAH,QAAA,EACjCd,KAAA,CAACP,IAAI;QAACsB,KAAK,EAAEC,MAAM,CAACE,KAAM;QAAAJ,QAAA,GACtBhB,IAAA,CAACJ,IAAI;UAACqB,KAAK,EAAEC,MAAM,CAACG,SAAU;UAAAL,QAAA,EAAC;QAAW,CAAM,CAAC,EACjDhB,IAAA,CAACH,SAAS;UACRoB,KAAK,EAAEC,MAAM,CAACI,SAAU;UACxBC,KAAK,EAAET,IAAK;UACZU,YAAY,EAAET,OAAQ;UACtBU,WAAW,EAAC;QAAM,CACnB,CAAC,EACFzB,IAAA,CAACJ,IAAI;UAACqB,KAAK,EAAEC,MAAM,CAACG,SAAU;UAAAL,QAAA,EAAC;QAAe,CAAM,CAAC;MAAA,CACnD;IAAC,CACH,CAAC,EACPhB,IAAA,CAACF,YAAY;MAACgB,IAAI,EAAEA;IAAK,CAAC,CAAC;EAAA,CACf,CAAC;AAEzB;AAEA,IAAMI,MAAM,GAAGxB,UAAU,CAACgC,MAAM,CAAC;EAC7BP,cAAc,EAAE,CAChB,CAAC;EACDC,KAAK,EAAE;IACLO,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,KAAK;IAChBC,MAAM,EAAE,EAAE;IACVC,UAAU,EAAE,MAAM;IAClBC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE;EACjB,CAAC;EACDV,SAAS,EAAE;IACTW,iBAAiB,EAAE,SAAS;IAC5BN,QAAQ,EAAE,EAAE;IACZO,iBAAiB,EAAE,CAAC;IACpBC,KAAK,EAAE,SAAS;IAChBL,UAAU,EAAE,MAAM;IAClBM,QAAQ,EAAE;EACZ,CAAC;EACDf,SAAS,EAAE;IACTM,QAAQ,EAAE,EAAE;IACZG,UAAU,EAAE,MAAM;IAClBK,KAAK,EAAE;EACT;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}