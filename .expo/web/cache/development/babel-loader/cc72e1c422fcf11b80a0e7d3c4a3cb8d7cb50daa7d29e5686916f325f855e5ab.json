{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faWind } from '@fortawesome/free-solid-svg-icons/faWind';\nimport { faEarthEurope } from '@fortawesome/free-solid-svg-icons/faEarthEurope';\nimport Repos from \"./Repos\";\nimport LoadingScreen from \"./LoadingScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GET_TRENDING_REPOS = gql`\n  query GetTrendingRepos($lang: String!, $createdAt: String!) {\n    search(query: $lang + \" created:\" + $createdAt, type: REPOSITORY, first: 20) {\n        edges {\n          node {\n            ... on Repository {\n              id\n              name\n              description\n              stargazerCount\n              forkCount\n              diskUsage\n              homepageUrl\n              updatedAt\n              owner {\n                login\n              }\n              primaryLanguage {\n                name\n              }\n              watchers {totalCount}\n              watchers {edges{node{login}}}\n            }\n          }\n        }\n    }\n  }\n`;\nvar GitHubSearch = function GitHubSearch(_ref) {\n  var lang = _ref.lang;\n  var _useQuery = useQuery(GET_TRENDING_REPOS, {\n      variables: {\n        lang: lang\n      }\n    }),\n    loading = _useQuery.loading,\n    error = _useQuery.error,\n    data = _useQuery.data;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    repos = _useState2[0],\n    setRepos = _useState2[1];\n  useEffect(function () {\n    if (!loading && data) {\n      var sortedRepos = data.search.edges.map(function (edge) {\n        return edge.node;\n      }).sort(function (a, b) {\n        return b.stargazerCount - a.stargazerCount;\n      });\n      setRepos(sortedRepos);\n    }\n  }, [loading, data]);\n  if (loading) return _jsx(LoadingScreen, {\n    icon: _jsx(FontAwesomeIcon, {\n      size: 100,\n      style: {\n        color: '#fdcb6e'\n      },\n      icon: faWind\n    })\n  });\n  if (error) return _jsxs(Text, {\n    children: [\"Error: \", error.message]\n  });\n  return _jsx(View, {\n    style: styles.container,\n    children: repos.length > 0 ? _jsx(FlatList, {\n      showsVerticalScrollIndicator: false,\n      data: repos,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(Repos, {\n          name: item.name,\n          description: item.description,\n          stars: item.stargazerCount,\n          primaryLanguage: item.primaryLanguage,\n          forkCount: item.forkCount,\n          diskUsage: item.diskUsage,\n          homepageUrl: item.homepageUrl,\n          updatedAt: item.updatedAt,\n          owner: item.owner,\n          watchers: item.watchers\n        });\n      }\n    }) : _jsx(LoadingScreen, {\n      icon: _jsx(FontAwesomeIcon, {\n        size: 100,\n        icon: faEarthEurope,\n        style: {\n          color: '#a29bfe'\n        }\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  title: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: '#a29bfe',\n    fontWeight: 'bold'\n  },\n  repoItem: {\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc',\n    marginBottom: 10\n  },\n  repoName: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default GitHubSearch;","map":{"version":3,"names":["React","useEffect","useState","useQuery","gql","View","Text","FlatList","StyleSheet","FontAwesomeIcon","faWind","faEarthEurope","Repos","LoadingScreen","jsx","_jsx","jsxs","_jsxs","GET_TRENDING_REPOS","GitHubSearch","_ref","lang","_useQuery","variables","loading","error","data","_useState","_useState2","_slicedToArray","repos","setRepos","sortedRepos","search","edges","map","edge","node","sort","a","b","stargazerCount","icon","size","style","color","children","message","styles","container","length","showsVerticalScrollIndicator","keyExtractor","item","id","renderItem","_ref2","name","description","stars","primaryLanguage","forkCount","diskUsage","homepageUrl","updatedAt","owner","watchers","create","flex","padding","title","fontSize","fontWeight","marginBottom","repoItem","borderBottomWidth","borderBottomColor","repoName"],"sources":["/Users/alex/Desktop/Cours/InteractionProgramming/Lab3-TDDC73/Components/GitHubSearch.js"],"sourcesContent":["// GitHubSearch.js\nimport React, { useEffect, useState } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { View, Text, FlatList, StyleSheet } from 'react-native';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome'\nimport { faWind } from '@fortawesome/free-solid-svg-icons/faWind'\nimport { faEarthEurope } from '@fortawesome/free-solid-svg-icons/faEarthEurope'\nimport Repos from './Repos';\nimport LoadingScreen from './LoadingScreen';\n\nconst GET_TRENDING_REPOS = gql`\n  query GetTrendingRepos($lang: String!, $createdAt: String!) {\n    search(query: $lang + \" created:\" + $createdAt, type: REPOSITORY, first: 20) {\n        edges {\n          node {\n            ... on Repository {\n              id\n              name\n              description\n              stargazerCount\n              forkCount\n              diskUsage\n              homepageUrl\n              updatedAt\n              owner {\n                login\n              }\n              primaryLanguage {\n                name\n              }\n              watchers {totalCount}\n              watchers {edges{node{login}}}\n            }\n          }\n        }\n    }\n  }\n`;\n\nconst GitHubSearch = ({ lang }) => {\n  const { loading, error, data } = useQuery(GET_TRENDING_REPOS, {\n    variables: { lang },\n  });\n  const [repos, setRepos] = useState([]);\n\n  useEffect(() => {\n    if (!loading && data) {\n      const sortedRepos = data.search.edges\n        .map((edge) => edge.node)\n        .sort((a, b) => b.stargazerCount - a.stargazerCount);\n      setRepos(sortedRepos);\n    }\n  }, [loading, data]);\n\n  if (loading) return <LoadingScreen icon={<FontAwesomeIcon size={100} style={{color: '#fdcb6e'}} icon={faWind} />}/>;\n  if (error) return <Text>Error: {error.message}</Text>;\n\n  return (\n    <View style={styles.container}>\n      {\n        repos.length > 0 ?\n        <FlatList\n          showsVerticalScrollIndicator={false}\n          data={repos}\n          keyExtractor={(item) => item.id}\n          renderItem={({ item }) => (\n            <Repos \n              name={item.name} \n              description={item.description} \n              stars={item.stargazerCount}\n              primaryLanguage={item.primaryLanguage}\n              forkCount={item.forkCount}\n              diskUsage={item.diskUsage}\n              homepageUrl={item.homepageUrl}\n              updatedAt={item.updatedAt}\n              owner={item.owner}\n              watchers={item.watchers}\n            />\n          )}\n        />\n        :\n        <LoadingScreen icon={<FontAwesomeIcon size={100} icon={faEarthEurope} style={{color: '#a29bfe'}}/>}/>\n      }\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  title: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: '#a29bfe',\n    fontWeight: 'bold',\n  },\n  repoItem: {\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc',\n    marginBottom: 10,\n  },\n  repoName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n\nexport default GitHubSearch;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}